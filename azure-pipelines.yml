
trigger:
- master

pool:
  vmImage: ubuntu-latest

# parameter um abzufragen ob apply oder destroy erstellt werden soll
parameters:
- name: terraformAction
  displayName: 'Terraform Action'
  type: string
  default: 'apply'
  values:
  - 'apply'
  - 'destroy'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'


# init - backend
- task: TerraformTaskV4@4
  displayName: Terraform Init
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
    backendServiceAWS: 'AWS-rust-tf-lession-eu'
    backendAWSBucketName: 'rust-tf-lession-eu'
    backendAWSKey: 'kubernetes-dev.tfstate'

# validate
- task: TerraformTaskV4@4
  displayName: Terraform validate
  inputs:
    provider: 'aws'
    command: 'validate'

# plan
# - task: TerraformTaskV4@4
#   displayName: Terraform plan
#   inputs:
#     provider: 'aws'
#     command: 'plan'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
#     environmentServiceNameAWS: 'AWS-rust-tf-lession-eu'

# apply
- task: TerraformTaskV4@4
  displayName: Terraform ${{parameters.terraformAction}}
  inputs:
    provider: 'aws'
    command: '${{parameters.terraformAction}}'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
    environmentServiceNameAWS: 'AWS-rust-tf-lession-eu'

# destroy
# - task: TerraformTaskV4@4
#   displayName: Terraform destroy
#   inputs:
#     provider: 'aws'
#     command: 'destroy'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
#     environmentServiceNameAWS: 'AWS-rust-tf-lession-eu'